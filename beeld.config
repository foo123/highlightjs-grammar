###################################################
#
#   The buildtools repository is at:
#   https://github.com/foo123/Beeld
#
###################################################

settings ={}
    RegExp = "RegExp::"
@
    
plugins =[{}]
    # include 'minify' plugin from plugins folder
    "minify" = "!plg:minify"
    # include 'doc' plugin from plugins folder
    "doc" = "!plg:doc"
@

tasks =[{}]
    
    build =[{}]
        
        src =[]
            
            !tpl:umd-header.tpl.js  # include a umd-header template
            
            # editor-grammar is git submodule with the invariant codebase
            # https://github.com/foo123/editor-grammar
            # using my local-up-to-date reference of editor-grammar below, i.e "../editor-grammar"
            # change "../editor-grammar" to "./editor-grammar" to use the local git submodule inside this repo
            
            ../editor-grammar/src/types.js
            ../editor-grammar/src/utils.js
            ../editor-grammar/src/helpers.js
            ../editor-grammar/src/token.js
            ../editor-grammar/src/parser.js
            
            ./src/main.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/main.js

        # do any replacements to the source (orderedmap)
        replace =[{}]

            "@@ROOT@@" = "this"
            "@@EXPORTS@@" = "exports"
            "@@VERSION@@" = "4.0.0"
            "@@MODULE_NAME@@" = "HighlightJSGrammar"
            
        @

        out = ./build/highlightjs_grammar.js
        
    @
    
    minify =[{}]
        
        src =[]
            
            ./build/highlightjs_grammar.js
            
        @


        # extract documentation from the source (map)
        doc ={}
            "startdoc" = "/**[DOC_MARKDOWN]"
            "enddoc" = "[/DOC_MARKDOWN]**/"
            "trim" = RegExp::^\s*\*[ ]?
            "output" = "./api-reference.md"
        @


        # Minify the Package (map of lists)
        minify ={}

            # Options for Node UglifyJS Compiler (if used, default), (mangle and compress)
            uglifyjs =[]
                -m -c
            @

            # Options for Java Closure Compiler (if used)
            closure =[]
                "--language_in=ECMASCRIPT5_STRICT"
            @

            # Options for Java YUI Compressor Compiler (if used)
            yui =[]
                --preserve-semi
            @

        @

        out = ./build/highlightjs_grammar.min.js
    
    @

@
